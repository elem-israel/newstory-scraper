version: "3"
services:
  web:
    tty: true # Enables debugging capabilities when attached to this container.
    image: 'docker.io/bitnami/express:4-debian-10'
    command: npm run dev-docker
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9093
      - PORT=3000
      - NODE_ENV=development
      - SKIP_NPM_INSTALL=0
      - AZURE_STORAGE_CONNECTION_STRING
      - CONTAINER_NAME
    ports:
      - 3030:3000
    volumes:
      - ./web:/app
  worker:
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9093
      - AZURE_STORAGE_CONNECTION_STRING
      - DATABASE_CONNECTION_STRING=${DOCKER_DATABASE_CONNECTION_STRING}
      - CONTAINER_NAME
      - SQLALCHEMY_URL
      - KAFKA_TOPICS_LISTENER=newstory.tasks.echo,newstory.tasks.newEntry
    build:
      context: worker
    depends_on:
      - kafka
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: newstory.tasks.newEntry:10:1,newstory.tasks.echo:10:1,newstory.tasks.upload:10:1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  magic:
    image: digitsy/kafka-magic
    ports:
      - "8080:80"
    environment:
      KMAGIC_ALLOW_TOPIC_DELETE: "true"